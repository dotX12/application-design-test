{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Booking 2gis microservice.",
        "title": "Booking Documentation",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/v1/healthcheck": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HealthCheckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create new order",
                "parameters": [
                    {
                        "description": "-",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/orders/{order_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "name": "order_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/rooms": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Create new room availability",
                "parameters": [
                    {
                        "description": "-",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRoomAvailabilityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateOrderRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "foo@bar.com"
                },
                "from": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-12T00:00:00Z"
                },
                "hotel_id": {
                    "type": "string",
                    "example": "reddison"
                },
                "room_id": {
                    "type": "string",
                    "example": "lux"
                },
                "to": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-15T00:00:00Z"
                }
            }
        },
        "CreateRoomAvailabilityRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "hotel_id": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "string"
                }
            }
        },
        "ErrorDetailComponentResponse": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Field that caused the error (if any)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "source"
                    ]
                },
                "message": {
                    "description": "Error message",
                    "type": "string",
                    "example": "source: Field valid values are [foo bar] (enum)"
                }
            }
        },
        "ErrorDetailsResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details of the error",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorDetailComponentResponse"
                    }
                },
                "message": {
                    "description": "Detailed message of the error",
                    "type": "string",
                    "example": "Validation failed for the request parameters"
                },
                "slug": {
                    "description": "Slug of the error",
                    "type": "string",
                    "example": "400_malformed_request"
                },
                "status": {
                    "description": "Small message of the error",
                    "type": "string",
                    "example": "Unprocessable Entity"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ErrorDetailsResponse"
                        }
                    ]
                }
            }
        },
        "HealthCheckResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "OrderResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "foo@bar.com"
                },
                "from": {
                    "type": "string",
                    "format": "date",
                    "example": "2021-01-01"
                },
                "hotel_id": {
                    "type": "string",
                    "example": "resort"
                },
                "id": {
                    "type": "string"
                },
                "room_id": {
                    "type": "string",
                    "example": "premium"
                },
                "to": {
                    "type": "string",
                    "format": "date",
                    "example": "2021-01-02"
                }
            }
        }
    }
}